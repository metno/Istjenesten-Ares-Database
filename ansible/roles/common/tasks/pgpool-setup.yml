# Name:          pgpool-setup.yml
# Purpose:       Set up the pgpool installation.
# Author(s):     Nick Hughes
# Created:       2018-vii-26
# Modifications: 2018-vii-?  - 
# Copyright:     (c) Norwegian Meteorological Institute, 2018
# Citing:        https://doi.org/10.5281/zenodo.xxxxxx
#
# License:       This file is part of the BIFROST ice charting system.
#                BIFROST is free software: you can redistribute it and/or modify
#                it under the terms of the GNU General Public License as published by
#                the Free Software Foundation, version 3 of the License.
#                http://www.gnu.org/licenses/gpl-3.0.html
#                This program is distributed in the hope that it will be useful,
#                but WITHOUT ANY WARRANTY without even the implied warranty of
#                MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
---  
# Install pgpool2
- name: install pgpool packages from apt
  apt: name={{ item }} state=present
  with_items:
    - pgpool2
    - "postgresql-{{ psql_version }}-pgpool2" 
    - iputils-arping
    - apache2 
    - php7.2 
    - libapache2-mod-php7.2 
    - php7.2-pgsql

# Stop the postgresql and pgpool2 services
- name: stop pgpool2 service
  service: name=pgpool2 state=stopped
- name: stop postgresql service
  service: name=postgresql state=stopped

- name: set /etc/pgpool2 to vagrant user
  file:
    path: /etc/pgpool2
    state: directory
    owner: root 
    group: root
    mode: '0755'

- name: add pg_ctl to postgresql.conf
  lineinfile: 
    dest: /etc/postgresql/11/main/postgresql.conf 
    insertafter: "EOF"
    line: "pgpool.pg_ctl = '/usr/lib/postgresql/11/bin/pg_ctl'"

- name: backup pgpool.conf
  become: true
  become_method: sudo
  copy:
    src: /etc/pgpool2/pgpool.conf
    dest: /etc/pgpool2/pgpool.conf.clean

- name: change listen_addresses 
  replace: 
    dest: /etc/pgpool2/pgpool.conf
    regexp: "listen_addresses = 'localhost'"
    replace: "listen_addresses = '*'"

- name: set backend_hostname0
  replace: 
    dest: /etc/pgpool2/pgpool.conf
    regexp: "backend_hostname0 = 'localhost'"
    replace: "backend_hostname0 = '{{ master_ip }}'"

- name: set backend_port0
  replace: 
    dest: /etc/pgpool2/pgpool.conf
    regexp: "backend_port0 = 5432"
    replace: "backend_port0 = 5433"

- name: set backend_data_directory
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "backend_data_directory0 = '/var/lib/pgsql/data'"
    replace: "backend_data_directory0 = '/home/postgres/'"

- name: set backend_hostname1
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#backend_hostname1 = 'host2'"
    replace: "backend_hostname1 = '{{ slave_ip }}'"

- name: set backend_port1
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#backend_port1 = 5433"
    replace: "backend_port1 = 5433"

- name: set backend_weight1
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#backend_weight1 = 1"
    replace: "backend_weight1 = 1"

- name: set backend_data_directory1
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#backend_data_directory1 = '/data1'"
    replace: "backend_data_directory1 = '/home/postgres/'"

- name: set backend_flag1
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#backend_flag1 = 'ALLOW_TO_FAILOVER'"
    replace: "backend_flag1 = 'ALLOW_TO_FAILOVER'"

# optionally turn on load balancing
#- name: turn on load balancing
#  replace:
#    dest: /etc/pgpool2/pgpool.conf
#    regexp: "load_balance_mode = off"
#    replace: "load_balance_mode = on"

- name: turn on master/slave mode
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "master_slave_mode = off"
    replace: "master_slave_mode = on"

- name: set sr_check_period
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "sr_check_period = 0"
    replace: "sr_check_period = 5"

- name: set sr_check_user
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "sr_check_user = 'postgres'"
    replace: ""

- name: set health_check_period
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "health_check_period = 0"
    replace: "health_check_period = 5"

- name: set health check timeout
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "health_check_timeout = 20"
    replace: "health_check_timeout = 0"

- name: set health_check_user
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "health_check_user = 'nobody'"
    replace: "health_check_user = 'postgres'"

### NOTE PLAIN TEXT PASSWORD ###
- name: set failover command
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "failover_command = ''"
    replace: "failover_command = '/home/vagrant/git/istjenesten-ares-database/ansible/failover.sh %d %P %H postgres /etc/postgresql/11/main/im_the_master'"

# Add recovery options?

# Add trusted server?

- name: turn watchdog on 
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "use_watchdog = off"
    replace: "use_watchdog = on"

- name: set wd hostname master
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "wd_hostname = ''"
    replace: "wd_hostname = '{{ master_ip }}'"
  when: is_master

- name: set wd hostname slave
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "wd_hostname = ''"
    replace: "wd_hostname = '{{ slave_ip }}'"
  when: is_slave

# skip this on slave
- name: set wd priority
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "wd_priority = 1"
    replace: "wd_priority = 2"
  when: is_master

- name: set watchdog socket dir
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "wd_ipc_socket_dir = '/tmp'"
    replace: "wd_ipc_socket_dir = '/var/run/postgresql'"

- name: set virtual ip
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "delegate_IP = ''"
    replace: "delegate_IP = '10.168.33.99'"

- name: set lifecheck interval
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "wd_interval = 10"
    replace: "wd_interval = 3"

- name: set heartbeat_destination0
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "heartbeat_destination0 = 'host0_ip1'"
    replace: "heartbeat_destination0 = '{{ master_ip }}'"
  when: is_master

- name: set heartbeat_destination0
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "heartbeat_destination0 = 'host0_ip1'"
    replace: "heartbeat_destination0 = '{{ slave_ip }}'"
  when: is_slave

- name: set other pgpool hostname
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#other_pgpool_hostname0 = 'host0'"
    replace: "other_pgpool_hostname0 = '{{ slave_ip }}'"
  when: is_master

- name: set other pgpool hostname
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#other_pgpool_hostname0 = 'host0'"
    replace: "other_pgpool_hostname0 = '{{ master_ip }}'"
  when: is_slave

- name: set other pgpool port
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#other_pgpool_port0 = 5432"
    replace: "other_pgpool_port0 = 5432"

- name: set other watchdog port
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "#other_wd_port0 = 9000"
    replace: "other_wd_port0 = 9000"

- name: change if cmd path
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "if_cmd_path = '/sbin'"
    replace: "if_cmd_path = '/bin'"

##############
# NOTE enp0s8 is specific to the vm and will probably need to be changed
#############
# Change network adapter
- name: change adapte name 
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "eth0"
    ################
    # NOTE: This is specific to the VM, probably needs changing!
    # ##############
    replace: "enp0s8"

- name: change ip to ip_w (sudo wrapped command) 2
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "ip addr"
    replace: "ip_w addr"

- name: change arping to arping_w
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "arping -U"
    replace: "arping_w -U"

- name: change arping path
  replace:
    dest: /etc/pgpool2/pgpool.conf
    regexp: "arping_path = '/usr/sbin'"
    replace: "arping_path = '/usr/bin'"

- name: enable pool hba
  replace: dest=/etc/pgpool2/pgpool.conf
           regexp='enable_pool_hba = off' 
           replace='enable_pool_hba = on'
           backup=yes

# Add AddGeometryColumn to black_function_list fopr load balancing
# black_function_list = 'nextval,setval,nextval,setval,AddGeometryColumn'

# Online recovery setup
# recovery_user = 'postgres'
# recovery_password = 'postgres'
 

# health_check_period = 3
# health_check_user = 'postgres'
# health_check_password = 'postgres'
          
           
           
# Add lines to pcp.conf
#  postgres:e8a48653851e28c69d0506508fb27fc5
#  bifrostadmin:8ca2c6b406e9c24dd8b3e18352373e29
- name: add postgres to pcp.conf
  lineinfile: dest=/etc/pgpool2/pcp.conf insertafter="EOF" line="postgres:e8a48653851e28c69d0506508fb27fc5"
- name: add bifrostadmin to pcp.conf
  lineinfile: dest=/etc/pgpool2/pcp.conf insertafter="EOF" line="bifrostadmin:8ca2c6b406e9c24dd8b3e18352373e29"

# Add passwords to pool_passwd (as root)
# pg_md5 --md5auth --username postgres -p       
# pg_md5 --md5auth --username bifrostadmin -p
# or
# postgres:md53175bce1d3201d16594cebf9d7eb3f9d
# bifrostadmin:md559872a8893b12b5da9d18c6bf9359233
# bifrostanalyst:md5a342ac0664424a9c1fb933771d9bd667
# bifrostsat:md5461d643ec076cac50fcefd8e27ec30b6
- name: add postgres to pool_passwd.conf
  lineinfile: dest=/etc/pgpool2/pool_passwd insertafter="EOF" line="postgres:md53175bce1d3201d16594cebf9d7eb3f9d"
- name: add bifrostadmin to pool_passwd.conf
  lineinfile: dest=/etc/pgpool2/pool_passwd insertafter="EOF" line="bifrostadmin:md559872a8893b12b5da9d18c6bf9359233"
- name: add bifrostanalyst to pool_passwd.conf
  lineinfile: dest=/etc/pgpool2/pool_passwd insertafter="EOF" line="bifrostanalyst:md5a342ac0664424a9c1fb933771d9bd667"
- name: add bifrostsat to pool_passwd.conf
  lineinfile: dest=/etc/pgpool2/pool_passwd insertafter="EOF" line="bifrostsat:md5461d643ec076cac50fcefd8e27ec30b6"

# Change pool_passwd ownership to postgres:postgres
- name: change pool_passwd ownership
  file:
    path: /etc/pgpool2/pool_passwd
    owner: postgres
    group: postgres

# pcp_node_info now works for both postgres and bifrostadmin

# Adjust PostgreSQL pg_hba.conf
# remove trust/peer entries, all must be md5

# Adjust pool_hba.conf
# change trust to md5
- name: change trust to md5 in pool_hba.conf
  shell: "{{ item }}"
  args:
    chdir: "/etc/pgpool2"
  with_items:
    - /bin/sed --in-place '0,/trust/s/trust/dummy/;s/trust/md5/g;1,/dummy/s/dummy/trust/' pool_hba.conf

- name: add hosts line to pool_hba.conf
  lineinfile: 
    dest: /etc/pgpool2/pool_hba.conf
    insertafter: "EOF" 
    line: "host    all         postgres    10.168.0.0/16         md5"


# DO NOT adjust PostgreSQL pg_hba.conf
# Change peer to md5

# allow postgres and pgadmin to use sudo with ip and arping commands
- name: add lines to /etc/sudoers
  lineinfile:
    dest: /etc/sudoers
    line: '{{ item }}'
    validate: 'visudo -cf %s'
  with_items:
    - 'postgres ALL=(root) NOPASSWD: /bin/ip'
    - 'www-data ALL=(root) NOPASSWD: /bin/ip'
    - 'postgres ALL=(root) NOPASSWD: /usr/bin/arping'
    - 'www-data ALL=(root) NOPASSWD: /usr/bin/arping'

- name: copy ip_w wrapper to /bin/
  copy:
    src: /home/vagrant/git/istjenesten-ares-database/ansible/roles/common/files/ip_w
    dest: /bin/ip_w
    owner: postgres
    group: postgres
    mode: '0755'

- name: copy arping_w wrapper to /usr/bin/
  copy:
    src: /home/vagrant/git/istjenesten-ares-database/ansible/roles/common/files/arping_w
    dest: /usr/bin/arping_w
    owner: postgres
    group: postgres
    mode: '0755'


# Restart the postgresql and pgpool2 services
- name: start postgresql service
  service: name=postgresql state=started
- name: start pgpool2 service
  service: name=pgpool2 state=started
  
# Connect the slave server
# pcp_attach_node -U postgres -h localhost -p 9898 -n 1
#- name: connect the slave server
#  expect:
#    command: '/usr/sbin/pcp_attach_node -U postgres -h localhost -p 9898 -n 1'
#    responses:
#      (?i)Password: "postgres"
  
# Check status with 
# /usr/sbin/pcp_node_info --verbose -h localhost -U postgres 1
