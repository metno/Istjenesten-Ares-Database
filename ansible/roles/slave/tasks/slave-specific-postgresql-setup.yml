# Name:          slave-specific-postgresql-setup.yml
# Purpose:       Set up the pgpool installation.
# Author(s):     Nick Hughes
# Created:       2018-viii-07
# Modifications: 2018-viii-?  - 
# Copyright:     (c) Norwegian Meteorological Institute, 2018
# Citing:        https://doi.org/10.5281/zenodo.xxxxxx
#
# License:       This file is part of the BIFROST ice charting system.
#                BIFROST is free software: you can redistribute it and/or modify
#                it under the terms of the GNU General Public License as published by
#                the Free Software Foundation, version 3 of the License.
#                http://www.gnu.org/licenses/gpl-3.0.html
#                This program is distributed in the hope that it will be useful,
#                but WITHOUT ANY WARRANTY without even the implied warranty of
#                MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
---  

# Stop the PostgreSQL server
- name: stop postgresql service
  service: name=postgresql state=stopped

# Delete the data directory!
# i.e.
# sudo -i -u postgres
# cd /var/lib/postgresql/9.5    # NB: We movedthis earlier!
# rm -rf main
# pg_basebackup -v -D main -R -P -h 10.168.33.10 -p 5433 -U replication
# logout

- name: Delete data directory
  file:
    path: "/home/postgres"
    state: absent

- name: Recreate data directory with corrected permissions
  file:
    path:  "/home/postgres"
    owner: postgres
    group: postgres
    mode:  0700
    state: directory

- name: Create .pgpass file to be used by pg_basebackup
  copy:
    dest: "/var/lib/postgresql/.pgpass"
    mode: 0600
    content: |
      *:*:*:replication:postgres

- name: execute base backup
  command: 'sudo PGPASSFILE=/var/lib/postgresql/.pgpass pg_basebackup -v -D /home/postgres -R -P -h 10.168.33.10 -p 5433 -U replication'

- name: set correct permissions for /home/postgres
  file:
    path:  "/home/postgres"
    owner: postgres
    group: postgres
    mode:  0700
    state: directory
    recurse: True

# Edit the postgresql.conf

# change postgresql.conf hot standby options
- name: Change hot_standby in postgresql.conf
  replace: dest=/etc/postgresql/{{ psql_version }}/main/postgresql.conf
           regexp="^#hot_standby = on" 
           replace="hot_standby = on"
           backup=yes

- name: Change hot_standby_feedback in postgresql.conf
  replace: dest=/etc/postgresql/{{ psql_version }}/main/postgresql.conf
           regexp="^#hot_standby_feedback = on" 
           replace="hot_standby_feedback = on"
           backup=yes


# Edit recovery.conf (in the data directory)
# standby_mode = 'on'
# primary_slot_name = '10.168.33.20'
# primary_conninfo = 'host=10.168.33.10 port=5433 user=replication password=reppassword'
# trigger_file = '/etc/postgresql/10/main/im_the_master'

- name: add new configuration "recovery.conf"
  copy:
    dest: "/home/postgres/recovery.conf"
    mode: 0600
    content: |
      standby_mode = 'on'
      primary_slot_name = '10_168_33_20'
      primary_conninfo = 'host=10.168.33.10 port=5433 user=replication password=postgres'
      trigger_file = '/etc/postgresql/{{ psql_version }}/main/im_the_master'



# restart the PostgreSQL server
- name: start postgresql service
  service: name=postgresql state=started

